{"version":3,"sources":["components/home/home.tsx","components/users/users.tsx","components/navbar/navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["randomInt","Math","floor","random","HomePage","useState","undefined","searchedUserData","setSearchedUserData","searchName","setSearchName","id","name","age","newUser","setNewUser","searchUser","a","fetch","then","res","json","data","catch","err","console","log","createNewUser","requestOptions","method","headers","body","JSON","stringify","user","className","type","placeholder","onChange","event","target","value","parseInt","onClick","getUserData","setUserData","users","UserPage","userData","useEffect","map","_","Navbar","to","App","style","width","height","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.842fec41.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { UserData } from '../users/users';\nimport \"./home.css\";\n\nconst randomInt = () => {\n    return Math.floor(Math.random() * 999999) + 1\n}\n\nexport function HomePage() {\n    const [searchedUserData, setSearchedUserData] = useState<UserData>(undefined);\n    const [searchName, setSearchName] = useState<string>(\"\");\n    const [newUser, setNewUser] = useState<UserData>({ id: randomInt(), name: '', age: 0});\n\n    const _setSearchName = (event) => {\n        setSearchName(event.target.value);\n    };\n\n    const _setNewUserName = (event) => {\n        newUser.name = event.target.value;\n        setNewUser(newUser);\n    }\n\n     const _setNewUserAge = (event) => {\n        newUser.age = parseInt(event.target.value);\n        setNewUser(newUser);\n     }\n\n    const searchUser = async () => {\n        await fetch(`http://localhost:3000/user_data/?name=${searchName}`)\n            .then(res => res.json())\n            .then((data: UserData[]) => {\n                setSearchedUserData(data[0]);\n                setSearchName(\"\");\n            })\n            .catch(err => {\n                console.log(\"Error fetching user from the database\");\n            })\n    };\n\n    const createNewUser = async () => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newUser)\n        };\n        console.log(requestOptions.body);\n        await fetch('http://localhost:3000/add_user', requestOptions)\n            .then(res => res.json())\n            .then((user: UserData) => {\n                setNewUser({ id: randomInt(), name: '', age: 0});\n                console.log(user);\n            })\n            .catch(err => {\n                console.log(\"Error fetching user from the database\");\n            });\n    };\n\n    return ( \n        <div className='home-container'>\n            <div className='add-user-container'>\n                <div className='add-user-header'>Add new user</div>\n                <input type='text' className='input-field' placeholder='name' onChange={_setNewUserName}></input>\n                <input type='number' className='input-field' placeholder='age' onChange={_setNewUserAge}></input>\n                <div className='add-user-button' onClick={createNewUser}>Create User</div>\n            </div>\n\n            <div className='query-user-container'>\n                <div className='query-user-header'>Get user by name</div>\n                <input type='text' className='input-field' placeholder='user name' onChange={_setSearchName}></input>\n                <div className='query-user' onClick={searchUser}>Get user</div>\n            </div>\n            <div className='user-data'>\n                {searchedUserData !== undefined? `${(searchedUserData as UserData).age} year old ${(searchedUserData as UserData).name}` : 'No user searched' }\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport \"./users.css\";\n\nexport interface UserData {\n    id: number,\n    name: string,\n    age: number\n}\n\nconst getUserData = async (setUserData) => {\n    await fetch('http://localhost:3000/user_data')\n    .then(res => res.json())\n    .then((users: {data: UserData[]}) => {\n        setUserData(users.data);\n    })\n    .catch(err => {\n        console.log(\"Error fetching users from the database\");\n    })\n}\n\nexport function UserPage() {\n    const [userData, setUserData] = useState([])\n\n    useEffect(() => {\n        getUserData(setUserData);\n    }, []);\n    \n    return (\n        <div className='users-container'>\n            <div className='users-header'>Users</div>\n            <ul className=\"users-list\">\n                {\n                    userData.map(({_, name, age}) => {\n                        return <li className='user-data'>{age} year old {name}</li>;\n                    })\n                }\n            </ul>\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport './navbar.css';\nimport { Link } from \"react-router-dom\";\n\nexport function Navbar() {\n    return (\n        <div className='navbar-container'>\n            <Link to=\"\" className='nav-item'>Home</Link>\n            <Link to=\"/users\" className='nav-item'>Users</Link>\n        </div>\n    );\n}","import React from 'react';\nimport { HomePage } from \"./components/home/home\";\nimport { UserPage } from \"./components/users/users\";\nimport { Navbar } from \"./components/navbar/navbar\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <BrowserRouter className='main-container'>\n            <Navbar />\n            <Switch style={{width: '100%', height: 'calc(100% - 100px)'}}>\n                <Route path=\"/\" exact component={HomePage} />\n                <Route path=\"/users\" exact component={UserPage} />\n            </Switch>\n\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}